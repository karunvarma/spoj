#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define inf  1e9
vector<pair<int,double>>graph[110];
 
 
double solve(int src,int n)
{
    vector<double> dist;
    vector<bool> vis;
 
    dist.assign(n+1,0);
    vis.assign(n+1,false);
 
    priority_queue<pair<double,int>>pq;
    dist[src]=1;
    pq.push({1,src});
 
    while(!pq.empty())
    {
        auto curr=pq.top();
        pq.pop();
        int u=curr.second;
 
 
        for(auto adj:graph[u])
        {
            int v=adj.first;
            if(dist[v]<dist[u]*adj.second)
            {
                vis[v]=true;
                dist[v]=dist[u]*adj.second;
                pq.push({dist[v],v});
            }
        }
    }
    return dist[n];
}
 
void init(int n)
{
    for(int i=0;i<=n;i++)
    {
        graph[i].clear();
    }
 
}
 
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
 
    while(true)
    {
        int n;
        cin>>n;
        init(n);
        if(n==0) break;
        int m;
        cin>>m;
        for(int i=0;i<m;i++)
        {
            int u,v;
            double w;
            cin>>u>>v>>w;
            graph[u].push_back(make_pair(v,w/100));
            graph[v].push_back(make_pair(u,w/100));
        }
        cout << fixed << setprecision(6)<<solve(1,n)*100<<" percent"<<endl;
    }
}
